{"version":3,"sources":["components/Cards/Cards.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","App.module.css","19.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","StylesProvider","container","Grid","spacing","item","component","Card","xs","md","cx","styles","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","console","log","Chart","useState","setDailyData","useEffect","fetchAPI","linechart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","src","Co","alt","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c17f49b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1yWZu\",\"card\":\"Cards_card__1iTts\",\"infected\":\"Cards_infected__2X3Kx\",\"recovered\":\"Cards_recovered__HZMKw\",\"deaths\":\"Cards_deaths__2AK7S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"CountryPicker_form__2vjXq\"};","import React from 'react';\r\nimport {Card ,CardContent,Typography,Grid, StylesProvider} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nimport styles from './Cards.module.css';\r\n\r\n\r\nconst Cards = ({data:{confirmed,recovered,deaths, lastUpdate}}) => {\r\n    if(! confirmed){\r\n        return 'Loading...';\r\n    }\r\n    return(\r\n        <div className={StylesProvider.container} >\r\n            <Grid container spacing={3} className='center'>\r\n                <Grid  item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent >\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\" >\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator={\",\"}/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\" >Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\" >\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator={\",\"}/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\" >Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card}xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\" >\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator={\",\"}/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\" >Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","\r\nimport axios from 'axios';\r\n\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nconst fetchData = async (country) =>{\r\n    let changableUrl = url ;\r\n    if (country) {\r\n        changableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n\r\n    try{\r\n        const {data:{confirmed,recovered,deaths,lastUpdate} } = await axios.get(changableUrl);\r\n\r\n    \r\n        return {confirmed,recovered,deaths,lastUpdate};\r\n    } catch (error){\r\n    \r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default fetchData;\r\n\r\nexport const fetchDailyData = async () => {\r\n    try{\r\n        const  {data}= await axios.get(`${url}/daily`);\r\n        const modifiedData = data.map((dailyData)=> ({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths :dailyData.deaths.total,\r\n            date:dailyData.reportDate\r\n        }))\r\n        return modifiedData\r\n    }catch (error){\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const fetchCountries = async() => {\r\n    try{\r\n        const {data:{countries }} = await axios.get(`${url}/countries`);\r\n        return countries.map((country) => country.name);\r\n    \r\n    }catch (err){\r\n        console.log(err);\r\n\r\n    }\r\n}","import React,{useState ,useEffect} from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport styles from './Chart.module.css';\r\nimport {Line , Bar } from 'react-chartjs-2'\r\n\r\nconst Chart = ( {data :{confirmed,recovered,deaths},country}) =>{\r\n    const [dailyData ,setDailyData] = useState([]);\r\n\r\n    useEffect(()=> {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData())\r\n        } \r\n        fetchAPI();\r\n    } ,[]);\r\n    \r\n    const linechart =( \r\n        dailyData.length\r\n        ? (<Line data={{labels:dailyData.map(({date})=> date),datasets:[{\r\n            data:dailyData.map(({confirmed})=> confirmed),\r\n            label:'Infected',\r\n            borderColor:'#3333ff',\r\n            fill:true,\r\n\r\n        },{  data:dailyData.map(({deaths})=> deaths),\r\n            label:'Deaths',\r\n            borderColor:'red',\r\n            backgroundColor:'rgba(255,0,0,0.5)',\r\n            fill:true,}],}}/>)\r\n        : null\r\n\r\n    ) \r\n    \r\n    const barChart = (\r\n        confirmed\r\n        ? (\r\n            <Bar data={{ labels:['Infected','Recovered','Deaths'],\r\n            datasets:[{label:'people',backgroundColor:['blue','green','red'],data:[confirmed.value,recovered.value,deaths.value]}]}} \r\n            options={{ legend: {display:false },title:{display:true,text:`Current state in ${country}`}}}/>\r\n\r\n        ): null\r\n    )\r\n    return(\r\n        <div className={styles.container}>\r\n            {country ? barChart : linechart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React , {useState,useEffect }from 'react';\r\nimport {NativeSelect , FormControl}from '@material-ui/core';\r\nimport './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api';\r\n\r\n\r\nconst CountryPicker = ({handleCountryChange}) =>{\r\n    const [fetchedCountries, setFetchedCountries]= useState([]);\r\n    useEffect(()=> {\r\n        const fetchAPI = async ()=> {\r\n            setFetchedCountries(await fetchCountries());\r\n            \r\n        }\r\n\r\n        fetchAPI() \r\n    },[setFetchedCountries])\r\n    \r\n    return(\r\n       <FormControl className=''>\r\n           <NativeSelect className='native grow mt4 b--solid  ' defaultValue='' onChange={(e) =>handleCountryChange(e.target.value)}>\r\n               <option value=\"\">Global</option>\r\n               {fetchedCountries.map((country ,i)=>  <option key={i} value={country}>{country}</option>)}\r\n           </NativeSelect>\r\n       </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\nimport {Cards ,Chart ,CountryPicker } from './components';\nimport styles from './App.module.css';\nimport fetchData from './api'\nimport 'tachyons';\nimport Co  from './19.png'\n\n\nclass App extends React.Component{\n  state = {\n    data:{},\n    country:'',\n  }\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n\n    this.setState({data: fetchedData });\n  }\n  handleCountryChange = async (country)=>{\n    const fetchedData =await fetchData(country)\n    \n    this.setState({data:fetchedData,country:country});\n\n  }\n  render() {\n    const {data , country}= this.state;\n    return(\n      <div className={styles.container}>\n        <div className='pv4 q' >\n          <img className='' src={Co} alt='19'/>\n        </div>\n        <Cards data={data}/>\n        <CountryPicker handleCountryChange={ this.handleCountryChange}/>\n        <Chart data={data} country={country}/>\n      </div>\n    )\n    \n  }\n\n  \n  \n\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2rtOu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3zl2M\",\"q\":\"App_q__nq3b0\"};","module.exports = __webpack_public_path__ + \"static/media/19.80f54902.png\";"],"sourceRoot":""}